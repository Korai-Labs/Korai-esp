From 38e66925e36b9f3f15c2b2dd56518b3bf96b568a Mon Sep 17 00:00:00 2001
From: ankris812 <62661743+ankris812@users.noreply.github.com>
Date: Sun, 11 Jun 2023 00:41:14 +0200
Subject: [PATCH] Update ReadMe.md

---
 ReadMe.md | 144 +++++++++++++++++++++++++++---------------------------
 1 file changed, 72 insertions(+), 72 deletions(-)

diff --git a/ReadMe.md b/ReadMe.md
index b60d66fbdd8..dad6ad8f2cd 100644
--- a/ReadMe.md
+++ b/ReadMe.md
@@ -1,114 +1,114 @@
-<picture>
-    <source media="(prefers-color-scheme: dark)" srcset="/.github/assets/dark_theme_banner.png">
-    <source media="(prefers-color-scheme: light)" srcset="/.github/assets/light_theme_banner.png">
-    <img
-        alt="A pixel art of a Dophin with text: Flipper Zero Official Repo"
-        src="/.github/assets/light_theme_banner.png">
-</picture>
+# Korai Firmware
 
-# Flipper Zero Firmware
+Fork of https://github.com/flipperdevices/flipperzero-firmware
+# Read the Docs
 
-- [Flipper Zero Official Website](https://flipperzero.one). A simple way to explain to your friends what Flipper Zero can do.
-- [Flipper Zero Firmware Update](https://update.flipperzero.one). Improvements for your dolphin: latest firmware releases, upgrade tools for PC and mobile devices.
-- [User Documentation](https://docs.flipperzero.one). Learn more about your dolphin: specs, usage guides, and anything you want to ask.
+Check out details on [how to build firmware](documentation/fbt.md), [write applications](documentation/AppsOnSDCard.md), [un-brick your device](documentation/KeyCombo.md) and more in `documentation` folder. 
 
-# Contributing
+# Update firmware
 
-Our main goal is to build a healthy and sustainable community around Flipper, so we're open to any new ideas and contributions. We also have some rules and taboos here, so please read this page and our [Code of Conduct](/CODE_OF_CONDUCT.md) carefully.
+[Get Latest Firmware from releases](https://github.com/ankris812/Korai/releases)
 
-## I need help
+Flipper Zero's firmware consists of two components:
 
-The best place to search for answers is our [User Documentation](https://docs.flipperzero.one). If you can't find the answer there, check our [Discord Server](https://flipp.dev/discord) or our [Forum](https://forum.flipperzero.one/).
+- Core2 firmware set - proprietary components by ST: FUS + radio stack. FUS is flashed at factory, and you should never update it.
+- Core1 Firmware - HAL + OS + Drivers + Applications.
 
-## I want to report an issue
+They both must be flashed in the order described.
 
-If you've found an issue and want to report it, please check our [Issues](https://github.com/flipperdevices/flipperzero-firmware/issues) page. Make sure the description contains information about the firmware version you're using, your platform, and a clear explanation of the steps to reproduce the issue.
+## With offline update package
 
-## I want to contribute code
+With Flipper attached over USB:
 
-Before opening a PR, please confirm that your changes must be contained in the firmware. Many ideas can easily be implemented as external applications and published in the Flipper Application Catalog (coming soon). If you are unsure, reach out to us on the [Discord Server](https://flipp.dev/discord) or the [Issues](https://github.com/flipperdevices/flipperzero-firmware/issues) page, and we'll help you find the right place for your code.
+`./fbt flash_usb`
 
-Also, please read our [Contribution Guide](/CONTRIBUTING.md) and our [Coding Style](/CODING_STYLE.md), and make sure your code is compatible with our [Project License](/LICENSE).
+Just building the package:
 
-Finally, open a [Pull Request](https://github.com/flipperdevices/flipperzero-firmware/pulls) and make sure that CI/CD statuses are all green.
+`./fbt updater_package`
 
-# Development
+To update, copy the resulting directory to Flipper's SD card and navigate to `update.fuf` file in Archive app. 
 
-Flipper Zero Firmware is written in C, with some bits and pieces written in C++ and armv7m assembly languages. An intermediate level of C knowledge is recommended for comfortable programming. C, C++, and armv7m assembly languages are supported for Flipper applications.
+## With STLink
 
-## Requirements
+### Core1 Firmware
 
-Supported development platforms:
+Prerequisites:
 
-- Windows 10+ with PowerShell and Git (x86_64)
-- macOS 12+ with Command Line tools (x86_64, arm64)
-- Ubuntu 20.04+ with build-essential and Git (x86_64)
+- Linux / macOS
+- Terminal
+- [arm-gcc-none-eabi](https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-rm/downloads)
+- openocd
 
-Supported in-circuit debuggers (optional but highly recommended):
+One-liner: `./fbt firmware_flash`
 
-- [Flipper Zero Wi-Fi Development Board](https://shop.flipperzero.one/products/wifi-devboard)
-- ST-Link
-- J-Link
+## With USB DFU 
 
-Flipper Build System will take care of all the other dependencies.
+1. Download latest [Firmware](https://update.flipperzero.one)
 
-## Cloning source code
+2. Reboot Flipper to Bootloader
+ - Press and hold `← Left` + `↩ Back` for reset 
+ - Release `↩ Back` and keep holding `← Left` until blue LED lights up
+ - Release `← Left`
 
-Make sure you have enough space and clone the source code:
+3. Run `dfu-util -D full.dfu -a 0`
 
-```shell
-git clone --recursive https://github.com/flipperdevices/flipperzero-firmware.git
-```
+# Build on Linux/macOS
 
-## Building
+Check out `documentation/fbt.md` for details on building and flashing firmware. 
 
-Build firmware using Flipper Build Tool:
+## macOS Prerequisites
 
-```shell
-./fbt
+Make sure you have [brew](https://brew.sh) and install all the dependencies:
+```sh
+brew bundle --verbose
 ```
 
-## Flashing firmware using an in-circuit debugger
+## Linux Prerequisites
+
+The FBT tool handles everything, only `git` is required.
+
+### Optional dependencies
 
-Connect your in-circuit debugger to your Flipper and flash firmware using Flipper Build Tool:
+- openocd (debugging/flashing over SWD)
+- heatshrink (compiling image assets)
+- clang-format (code formatting)
+- dfu-util (flashing over USB DFU)
+- protobuf (compiling proto sources)
 
-```shell
-./fbt flash
+For example, to install them on Debian, use:
+```sh
+apt update
+apt install openocd clang-format-13 dfu-util protobuf-compiler
 ```
 
-## Flashing firmware using USB
+heatshrink has to be compiled [from sources](https://github.com/atomicobject/heatshrink).
 
-Make sure your Flipper is on, and your firmware is functioning. Connect your Flipper with a USB cable and flash firmware using Flipper Build Tool:
+## Compile everything
 
-```shell
-./fbt flash_usb
+```sh
+./fbt
 ```
 
-## Documentation
+Check `dist/` for build outputs.
 
-- [Flipper Build Tool](/documentation/fbt.md) - building, flashing, and debugging Flipper software
-- [Applications](/documentation/AppsOnSDCard.md), [Application Manifest](/documentation/AppManifests.md) - developing, building, deploying, and debugging Flipper applications
-- [Hardware combos and Un-bricking](/documentation/KeyCombo.md) - recovering your Flipper from the most nasty situations
-- [Flipper File Formats](/documentation/file_formats) - everything about how Flipper stores your data and how you can work with it
-- [Universal Remotes](/documentation/UniversalRemotes.md) - contributing your infrared remote to the universal remote database
-- [Firmware Roadmap](/documentation/RoadMap.md)
-- And much more in the [documentation](/documentation) folder
+Use **`flipper-z-{target}-full-{suffix}.dfu`** to flash your device.
 
-# Project structure
+## Flash everything
 
-- `applications`    - applications and services used in firmware
-- `assets`          - assets used by applications and services
-- `furi`            - Furi Core: OS-level primitives and helpers
-- `documentation`   - documentation generation system configs and input files
-- `firmware`        - firmware source code
-- `lib`             - our and 3rd party libraries, drivers, etc.
-- `scripts`         - supplementary scripts and python libraries home
+Connect your device via ST-Link and run:
+```sh
+./fbt firmware_flash
+```
 
-Also, see `ReadMe.md` files inside those directories for further details.
+# Project structure
 
-# Links
+- `applications`    - Applications and services used in firmware
+- `assets`          - Assets used by applications and services
+- `furi`            - Furi Core: os level primitives and helpers
+- `debug`           - Debug tool: GDB-plugins, SVD-file and etc
+- `documentation`   - Documentation generation system configs and input files
+- `firmware`        - Firmware source code
+- `lib`             - Our and 3rd party libraries, drivers, etc.
+- `scripts`         - Supplementary scripts and python libraries home
 
-- Discord: [flipp.dev/discord](https://flipp.dev/discord)
-- Website: [flipperzero.one](https://flipperzero.one)
-- Forum: [forum.flipperzero.one](https://forum.flipperzero.one/)
-- Kickstarter: [kickstarter.com](https://www.kickstarter.com/projects/flipper-devices/flipper-zero-tamagochi-for-hackers)
+Also pay attention to `ReadMe.md` files inside those directories.
